import os
import torch
import numpy as np
from PIL import Image
from hair_spotter_class import HairClassifier
from torchvision import transforms
from scipy.spatial.distance import cosine

# Load your trained model and average embeddings
hc = HairClassifier(data_dir="src/self/hair_spotter/training_hair")
hc.load_weights("path/to/your/hair_classifier_weights.pth")

# Paste your avg_embeddings dictionary here from previous step
avg_embeddings = {
    0: np.array([
        1.5971149, 0.00790468, 1.485247, 1.19854, 0.8049337, 1.673789,
        1.76846, 2.0937858, 0.09028714, 1.3127979, 0.18290776, 1.6145192,
        0.01332771, 0.03760183, 1.5945376, 0.0167757, 1.553851, 2.7625995,
        0.6959869, 1.4040129, 0.05173616, 1.629395, 1.0075866, 1.7174851,
        0.9354248, 1.5421932, 1.747025, 1.4055231, 0.89576256, 0.00685458,
        0.01222606, 0.0093288, 0.01860898, 1.6557524, 0.9518542, 0.01490652,
        1.6616626, 1.8061389, 0.00757006, 0.00787626, 0.0117388, 0.01394843,
        0.0098861, 1.4915792, 1.7057704, 1.3814358, 1.8620437, 0.02842964,
        0.02200053, 0.01269591, 1.521836, 0.04354201, 0.8830252, 1.5865818,
        1.691865, 1.3328788, 0.0844311, 1.5417931, 1.8332046, 1.7487264,
        0.6389722, 1.854427, 1.2211572, 0.00826845, 1.4515173, 1.8914717,
        1.1349341, 1.7472414, 1.5247399, 1.6708452, 1.590298, 1.3788612,
        1.4801724, 1.3166105, 1.6337686, 0.00787704, 0.00629133, 0.8792649,
        0.03422274, 0.01111887, 0.01506972, 1.8549057, 1.6245755, 0.03098343,
        0.78749716, 1.5991017, 0.9683413, 1.5027068, 1.0685979, 0.03294469,
        1.4608961, 0.01937977, 1.5464348, 0.00824177, 1.6984268, 1.5274185,
        1.7239887, 1.5353032, 1.8388497, 1.4799045, 1.8426503, 1.8539697,
        1.5949942, 1.9977276, 1.3443369, 0.9618442, 1.6871846, 1.6101338,
        1.4083191, 1.7091537, 1.6713144, 1.8188494, 0.79302233, 0.8775447,
        1.5213314, 1.7749652, 1.4578621, 1.1984571, 0.9840889, 1.3911666,
        1.7465802, 1.4724077, 0.34672487, 0.01388997, 0.870181, 0.85484755,
        1.4016207, 1.2902662, 1.4580705, 1.7928786, 0.5075791, 0.04491676,
        1.4873809, 1.5605409, 0.93493325, 1.6766053, 0.01809684, 1.6276201,
        1.667625, 0.0232965, 0.02016413, 0.00721493, 0.9627792, 1.327247,
        1.774993, 0.39791477, 1.6566849, 1.5991052, 0.05695936, 1.8042835,
        0.0227771, 1.753768, 1.8028557, 1.0216602, 0.36653802, 1.477145,
        1.5577656, 0.00855579, 1.4240488, 0.00641082, 1.5904208, 0.14031386,
        1.0393308, 1.7323778, 1.5983973, 0.01253994, 2.0144756, 1.530977,
        1.498625, 1.7218055, 1.7613792, 1.477877, 0.01159991, 0.4962538,
        1.4972883, 0.02121598, 1.6918324, 1.5879617, 1.9748425, 1.0834231,
        0.8924808, 0.01978078, 2.4570885, 1.5729312, 0.12307674, 1.9610205,
        0.01206852, 1.1421764, 1.5580255, 0.03440716, 1.6183379, 1.4334847,
        1.5925025, 2.1770997, 1.4591568, 1.2465329, 0.02642244, 1.4221138,
        0.9627727, 1.5146435, 1.3994452, 1.418346, 1.959538, 1.109772,
        1.2521592, 1.9215649, 1.6232672, 0.01473343, 0.93459547, 0.02518036,
        1.5953832, 1.4289185, 1.5854763, 1.6848211, 1.3137981, 1.4731275,
        0.84898317, 1.4347645, 1.3807161, 1.2519965, 1.899382, 1.6740223,
        0.00987739, 1.7064273, 0.01491028, 0.02195, 1.1541709, 0.00812907,
        0.02040118, 1.6329302, 1.638726, 0.44743016, 1.153743, 1.8486955,
        1.67882, 1.4640487, 1.6298614, 1.8702719, 1.581974, 1.2709349,
        0.01097446, 0.37492552, 1.7966155, 0.7687606, 1.3512079, 0.10768511,
        1.8941878, 1.398778, 1.5539669, 0.4096216, 1.659882, 0.01708001,
        1.8599831, 1.8054887, 0.00840033, 2.2455163, 0.58918035, 1.8508989,
        0.01388431, 0.02944513, 1.7603996, 1.7575011, 1.3567957, 1.5643162,
        1.4701, 1.6711264, 1.3406807, 0.94177073, 0.88794005, 1.5398692,
        0.01584358, 0.00735978, 1.8450617, 1.4920806, 0.00750699, 1.5022874,
        1.5890989, 1.3152466, 1.7731354, 1.3413974, 0.01867339, 0.01325847,
        0.56530035, 1.4288243, 0.86557245, 1.712082, 1.7887235, 1.5864372,
        1.5118225, 0.55519795, 0.85138816, 1.7537336, 1.0773451, 1.6693132,
        1.491234, 0.02312827, 1.5368378, 2.1469548, 1.3213453, 1.7294699,
        0.60049707, 1.1712775, 0.01010397, 0.02530139, 0.04791086, 1.8393195,
        0.01913878, 1.6359754, 1.5610389, 1.3285257, 1.9622087, 1.9553239,
        2.1788113, 0.68251413, 0.74180436, 0.8963042, 0.10229319, 1.4671375,
        1.3047917, 1.9733888, 1.6341609, 1.7033706, 0.5628551, 1.4340557,
        0.6690033, 1.7465982, 0.9725094, 0.00724166, 1.4183431, 1.1037376,
        0.9578504, 0.05501078, 1.5357257, 1.7615335, 1.2379599, 0.00808043,
        1.5282692, 1.7748691, 1.967875, 1.7172893, 1.4341824, 1.7115818,
        1.7752385, 0.07180656, 1.5542723, 1.3464171, 0.00993286, 1.4432925,
        0.03397772, 1.4495174, 1.6370322, 1.4803387, 1.5645156, 1.6930748,
        1.5807453, 1.4812964, 0.13255973, 1.7496347, 1.7353544, 0.01835582,
        0.01777127, 0.07313728, 1.143216, 0.26160333, 1.6731002, 0.04235788,
        0.5455106, 1.6406707, 1.6200756, 1.6112103, 2.1094995, 1.8622593,
        1.5577716, 1.6421874, 1.6197946, 1.8265343, 1.4433202, 1.4768513,
        1.6872587, 1.6823997, 0.02004946, 0.01059748, 0.04844187, 1.7387094,
        1.5415646, 1.3807235, 0.92227817, 0.03360898, 0.8491876, 1.68763,
        1.5833983, 0.00756136, 1.8217794, 1.4405832, 2.0276003, 0.2429851,
        1.5065266, 1.4667189, 0.8911803, 0.00931232, 0.02621451, 1.9387671,
        1.6187106, 1.1480596, 1.0643489, 1.4712844, 0.89687014, 1.7007661,
        1.4668945, 1.6377803, 0.01162846, 1.7820325, 1.4303577, 0.01084528,
        1.7593585, 0.0087694, 1.7727977, 0.01165887, 1.4053234, 1.6931102,
        1.5545818, 1.7981956, 0.53597957, 1.5191721, 1.6292478, 1.6020907,
        0.8344128, 0.09294435, 0.7014196, 1.6393417, 1.7221923, 1.6797696,
        1.4893134, 1.5770909, 1.8609438, 2.0564537, 0.02881603, 1.8105576,
        1.4465461, 0.17864628, 1.4167342, 0.00647663, 1.7687324, 0.01657537,
        1.5903395, 1.824733, 0.01801156, 1.4989226, 1.8518312, 1.6083844,
        1.4285879, 1.3016822, 1.7088654, 1.3027642, 0.00869168, 0.00951356,
        1.3467543, 0.01934795, 0.8457699, 1.5264618, 1.5125852, 0.01115915,
        1.5980153, 0.02217015, 0.0155523, 1.6399434, 0.02548786, 0.9305558,
        0.00717839, 1.8992941, 0.5678562, 1.8468953, 0.01050262, 0.01430285,
        1.4838833, 1.5677263, 0.00640127, 0.01305573, 0.79415566, 0.21477602,
        1.6390228, 1.8018417, 1.3883842, 1.4856671, 1.717188, 0.8149712,
        1.8414743, 0.01907783, 1.8829366, 0.09933953, 1.843709, 2.0745912,
        1.813332, 1.5733823, 1.2898531, 1.5784655, 1.4187322, 1.590109,
        1.7002846, 1.5204927, 0.00849173, 1.340973, 2.0134978, 1.3385943,
        1.5841068, 1.4094402, 1.1378069, 1.8241849, 0.00920897, 1.1740375,
        1.3849511, 1.3383963
    ]),
    1: np.array([
        0.05503213, 1.9733765, 0.02358228, 0.93993014, 1.3528384, 0.06055772,
        0.03608425, 0.11423621, 1.9299257, 0.01331454, 1.5920357, 0.03703434,
        1.9117512, 1.8311344, 0.04256023, 1.91772, 0.02711136, 0.08844383,
        0.70887417, 0.03717016, 1.5930414, 0.8113416, 1.002028, 0.09552307,
        0.7663489, 0.20927091, 0.02291794, 1.1047473, 0.8655896, 2.0472019,
        1.968764, 2.195912, 2.0371614, 0.02160932, 1.1292444, 1.974886,
        0.03096299, 0.13950795, 1.869384, 1.8912807, 2.0381548, 2.0366168,
        1.7973003, 0.04984174, 0.06012338, 0.03789678, 0.08784452, 2.378777,
        1.9800501, 1.8530205, 0.0701629, 1.8259431, 0.79313964, 0.06871884,
        0.04744471, 0.60445434, 2.2638955, 0.09137233, 0.1224142, 0.05859585,
        0.9238401, 0.02745715, 0.9863955, 1.9517245, 0.03315278, 0.11612622,
        0.7837899, 0.03855428, 0.4894849, 0.05659707, 0.00962039, 0.05894019,
        0.02643469, 0.16155536, 0.06199366, 1.8642823, 1.8229462, 1.1359249,
        1.7499137, 1.8013395, 1.929281, 0.08136519, 0.01547681, 2.359298,
        0.94246966, 0.09145044, 0.89381135, 0.05484612, 0.9628092, 1.8110325,
        0.08411292, 2.0622334, 0.01423649, 1.9392838, 0.07351139, 0.05704886,
        0.16139647, 0.03302149, 0.06990086, 0.0402268, 0.06658264, 0.05611046,
        0.04571018, 0.09049127, 0.43184784, 0.9395172, 0.0747352, 0.01604527,
        0.03184088, 0.07936613, 0.05800899, 0.136941, 1.1908995, 0.9344507,
        0.04735066, 0.04846949, 0.07582352, 0.99801964, 1.0614223, 0.46400145,
        0.08011636, 0.03095683, 1.2717919, 1.7429539, 1.030042, 1.1301562,
        0.02938418, 0.7418994, 0.02026287, 0.07879751, 1.3601031, 1.7850996,
        0.03888316, 0.04952839, 1.0928397, 0.09924444, 1.9293543, 0.02878121,
        0.05080191, 1.8708128, 1.6986543, 1.9884053, 0.9303416, 0.66691273,
        0.08136415, 1.1244267, 0.04222018, 0.05899637, 1.8824384, 0.02234395,
        1.7210836, 0.04089694, 0.06238138, 0.7112606, 1.154156, 0.05186284,
        0.02086322, 2.0758793, 0.24985333, 1.8324963, 0.05390159, 2.494188,
        1.0592903, 0.65848345, 0.07697526, 1.996978, 0.19074899, 0.02908034,
        0.02516705, 0.0686815, 0.06811143, 0.06284112, 2.0959976, 1.3390942,
        0.06380303, 1.8170049, 0.02738533, 0.04759076, 0.04973834, 0.69947565,
        0.8918684, 1.8741487, 0.19481856, 0.1301023, 1.8061048, 0.09322806,
        2.126437, 0.98668194, 0.04884814, 1.871444, 0.07440657, 0.01013041,
        0.10414065, 0.12255891, 0.05342413, 0.690741, 1.8794796, 0.03465091,
        0.8825565, 0.08290237, 0.03303523, 0.55649, 0.09782072, 0.8526511,
        1.1171913, 0.04652172, 0.04563456, 2.0377867, 1.1642185, 2.3574328,
        0.05162147, 0.0270579, 0.06799603, 0.15269348, 0.6399311, 0.02390473,
        1.1269034, 0.06285635, 0.02704356, 0.45418242, 0.10946324, 0.04067531,
        1.9227585, 0.10899164, 1.9182588, 1.6182191, 1.0231377, 1.9847533,
        2.2389364, 0.2598539, 0.03787677, 1.1624794, 0.7106667, 0.09082627,
        0.09726088, 0.02408519, 0.07266739, 0.04594218, 0.02818679, 1.0692451,
        1.7848616, 1.2380707, 0.06570162, 0.73008525, 0.00557995, 1.8346161,
        0.04397191, 0.0305253, 0.13545272, 1.5111128, 0.10560838, 2.08787,
        0.03752786, 0.02242502, 1.948542, 0.14095357, 1.2769796, 0.02110269,
        2.0514925, 2.2826548, 0.08398458, 0.03328271, 0.01515598, 0.04936086,
        0.03885956, 0.16665229, 0.00804384, 1.1689564, 0.87754357, 0.01434335,
        1.8618252, 1.9562842, 0.02909053, 0.06110064, 2.0585456, 0.11458309,
        0.0806272, 0.38688388, 0.08950848, 0.00657533, 2.8865318, 1.8922998,
        1.2859766, 0.01612529, 1.136571, 0.09563887, 0.08654595, 0.06815487,
        0.6304267, 1.3099611, 1.231833, 0.09219346, 0.91813, 0.04104688,
        0.02400069, 1.8851721, 0.2782469, 0.06928252, 0.5700495, 0.0844731,
        1.1076877, 0.90206665, 1.7562155, 1.656303, 2.0637589, 0.0974163,
        1.8497583, 0.09270127, 0.04334426, 0.01417534, 0.06407626, 0.08124022,
        0.22019945, 1.2385526, 0.865489, 1.0808647, 1.8551185, 0.0137661,
        0.8003312, 0.10761296, 0.07536326, 0.04234092, 1.1083169, 0.03116023,
        1.2742049, 0.07517722, 0.6803179, 1.7700266, 0.05425562, 0.5102606,
        1.1928679, 1.9314464, 0.10055767, 0.04282029, 0.5865401, 1.8283534,
        0.08128572, 0.07463107, 0.11986431, 0.04346465, 0.19051635, 0.07746848,
        0.10026564, 2.0856524, 0.0648993, 0.3812471, 2.0958414, 0.00415388,
        1.6826726, 0.4931545, 0.06813955, 0.04047049, 0.01262565, 0.0955155,
        0.0113989, 0.03388664, 1.5804238, 0.07449624, 0.0531394, 1.7969446,
        1.9403397, 1.8072441, 0.6489683, 1.4508047, 0.03622326, 1.8376174,
        1.3464637, 0.05026613, 0.0493346, 0.04199266, 0.16446145, 0.07821494,
        0.09741396, 0.07200859, 0.02321224, 0.09494762, 0.0065954, 0.07465459,
        0.05756982, 0.05681653, 2.1482694, 1.8681847, 1.843521, 0.08295582,
        0.39142844, 0.5344571, 0.95701814, 1.9705869, 0.94288224, 0.05655662,
        0.07229204, 2.0065367, 0.10681733, 0.01316459, 0.11797034, 1.4782575,
        0.097091, 0.0449623, 1.1777818, 1.9947124, 2.1671271, 0.10339312,
        0.04526017, 0.54191643, 0.82150775, 0.03560383, 1.0229807, 0.0377256,
        0.02936981, 0.0363407, 2.034089, 0.09057206, 0.05019776, 2.0877967,
        0.06693881, 2.0528014, 0.12951012, 1.8048731, 0.03632042, 0.05467314,
        0.02165704, 0.05411304, 1.2739319, 0.05768006, 0.03632365, 0.02396225,
        0.87601185, 1.915861, 0.82381415, 0.20284864, 0.03329888, 0.05723592,
        0.02465596, 0.09036805, 0.12899268, 0.21157275, 1.8231652, 0.07551132,
        0.10916001, 1.3741953, 0.04900325, 1.8636097, 0.10794165, 2.0189483,
        0.04866518, 0.07246856, 2.1689806, 0.0461559, 0.11084365, 0.01156066,
        0.02707358, 0.07846154, 0.04342935, 0.02388367, 1.8706996, 1.88811,
        0.90503484, 2.1280813, 1.0438061, 0.03664663, 1.4643613, 2.1271343,
        0.04284941, 1.6668292, 2.3329704, 0.02575598, 1.9623334, 0.9373944,
        2.091957, 0.07297182, 1.2616067, 0.08974758, 1.8493348, 1.9455706,
        0.03671651, 0.03743714, 1.8603127, 1.8697642, 1.1627258, 1.4176635,
        0.02798953, 0.11841906, 0.06341787, 0.06946612, 0.08627286, 1.2602152,
        0.08904721, 1.9382136, 0.0936069, 1.5493602, 0.03329736, 0.1055197,
        0.02734845, 0.03061882, 0.03265053, 0.04142879, 0.01243269, 0.05725009,
        0.07876093, 0.09395356, 1.945606, 0.09479433, 0.06201638, 0.04118368,
        1.155194, 0.0097496
    ])
}

# Feature extractor
feature_extractor = torch.nn.Sequential(*(list(hc.model.children())[:-1]))

# Transform (same as training)
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225])
])

# Directory with new images
new_images_dir = "datasets/ddi"
image_files = [f for f in os.listdir(new_images_dir) if f.lower().endswith(('.jpg', '.jpeg', '.png'))]

for img_file in image_files:
    img_path = os.path.join(new_images_dir, img_file)
    img = Image.open(img_path).convert('RGB')
    img_t = transform(img).unsqueeze(0).to(hc.device)
    with torch.no_grad():
        emb = feature_extractor(img_t)
        emb = emb.view(emb.size(0), -1).cpu().numpy()[0]
    # Compute cosine similarity to each class average
    sim_hair = 1 - cosine(emb, avg_embeddings[0])
    sim_not_hair = 1 - cosine(emb, avg_embeddings[1])
    predicted_class = "hair" if sim_hair > sim_not_hair else "not_hair"
    print(f"{img_file}: {predicted_class} (hair similarity: {sim_hair:.4f}, not_hair similarity: {sim_not_hair:.4f})")